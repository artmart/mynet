<?php

namespace Proxies\__CG__\MY\MainBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Horoscop extends \MY\MainBundle\Entity\Horoscop implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setSlug($slug)
    {
        $this->__load();
        return parent::setSlug($slug);
    }

    public function getSlug()
    {
        $this->__load();
        return parent::getSlug();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setContent($content)
    {
        $this->__load();
        return parent::setContent($content);
    }

    public function getContent()
    {
        $this->__load();
        return parent::getContent();
    }

    public function setShortContent($shortContent)
    {
        $this->__load();
        return parent::setShortContent($shortContent);
    }

    public function getShortContent()
    {
        $this->__load();
        return parent::getShortContent();
    }

    public function setStatus($Status)
    {
        $this->__load();
        return parent::setStatus($Status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setType($Type)
    {
        $this->__load();
        return parent::setType($Type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setUpdated($updated)
    {
        $this->__load();
        return parent::setUpdated($updated);
    }

    public function getUpdated()
    {
        $this->__load();
        return parent::getUpdated();
    }

    public function setMetaTitle($metaTitle)
    {
        $this->__load();
        return parent::setMetaTitle($metaTitle);
    }

    public function getMetaTitle()
    {
        $this->__load();
        return parent::getMetaTitle();
    }

    public function setMetaDesc($metaDesc)
    {
        $this->__load();
        return parent::setMetaDesc($metaDesc);
    }

    public function getMetaDesc()
    {
        $this->__load();
        return parent::getMetaDesc();
    }

    public function setMetaKw($metaKw)
    {
        $this->__load();
        return parent::setMetaKw($metaKw);
    }

    public function getMetaKw()
    {
        $this->__load();
        return parent::getMetaKw();
    }

    public function addTranslation(\MY\MainBundle\Entity\HoroscopTranslations $translations)
    {
        $this->__load();
        return parent::addTranslation($translations);
    }

    public function removeTranslation(\MY\MainBundle\Entity\HoroscopTranslations $translations)
    {
        $this->__load();
        return parent::removeTranslation($translations);
    }

    public function getTranslations()
    {
        $this->__load();
        return parent::getTranslations();
    }

    public function setImage(\MY\MediaBundle\Entity\Media $image = NULL)
    {
        $this->__load();
        return parent::setImage($image);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getImage()
    {
        $this->__load();
        return parent::getImage();
    }

    public function set_Date($_Date)
    {
        $this->__load();
        return parent::set_Date($_Date);
    }

    public function get_Date()
    {
        $this->__load();
        return parent::get_Date();
    }

    public function setGallery(\MY\MediaBundle\Entity\Gallery $gallery = NULL)
    {
        $this->__load();
        return parent::setGallery($gallery);
    }

    public function getGallery()
    {
        $this->__load();
        return parent::getGallery();
    }

    public function setHomepageStatus($homepageStatus)
    {
        $this->__load();
        return parent::setHomepageStatus($homepageStatus);
    }

    public function getHomepageStatus()
    {
        $this->__load();
        return parent::getHomepageStatus();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'slug', 'title', 'content', 'short_content', 'status', 'type', 'homepage_status', '_date', 'created', 'updated', 'meta_title', 'meta_desc', 'meta_kw', 'translations', 'image', 'gallery');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}